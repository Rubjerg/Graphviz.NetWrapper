# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# https://timheuer.com/blog/building-net-framework-apps-using-github-actions/
jobs:
  # This workflow contains a single job called "build"
  build:

    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v1
      name: Checkout Code

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore NuGet Packages
      run: nuget restore Rubjerg.Graphviz.sln

    - name: Build App
      run: msbuild Rubjerg.Graphviz.sln /p:Configuration=Release

    - name: Run Recordshape test
      run: Rubjerg.Graphviz\GraphvizWrapper.exe

    # - name: Check if README is up-to-date
    #   run: git diff --exit-code -- README.md

    # - name: Run Unittests With Coverage Calculation
    #   run: packages\opencover\4.7.922\tools\OpenCover.Console.exe -returntargetcode -skipautoprops -register '-target:bash.exe' -targetargs:'testrunner.sh Rubjerg.Graphviz.Test\bin\x64\Release\net48\Rubjerg.Graphviz.Test.dll'  '-filter:+[Rubjerg*]* -[Rubjerg.Graphviz.Test*]*'

    # - name: Upload Coverage data
    #   run: |
    #     echo "C:\msys64\usr\bin" >> $GITHUB_PATH
    #     Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
    #     bash codecov.sh -f "results.xml"

    # - name: Run Nuget Tests
    #   run: bash testrunner.sh Rubjerg.Graphviz.NugetTest\bin\x64\Release\net48\Rubjerg.Graphviz.NugetTest.dll

    # - name: Run Transitive Tests
    #   run: bash testrunner.sh Rubjerg.Graphviz.TransitiveTest\bin\x64\Release\net48\Rubjerg.Graphviz.TransitiveTest.dll

    # - name: Run Transitive Nuget Tests
    #   run: bash testrunner.sh Rubjerg.Graphviz.TransitiveNugetTest\bin\x64\Release\net48\Rubjerg.Graphviz.TransitiveNugetTest.dll

